{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah\\\\vr-medical-visualizations\\\\src\\\\components\\\\EmpathyScoresChart.jsx\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmpathyScoresChart = () => {\n  // Data for empathy scores comparison\n  const empathyScoreData = [{\n    name: 'Traditional Role-Playing',\n    value: 100\n  }, {\n    name: 'VR-Based Training',\n    value: 132\n  }];\n\n  // Colors for chart\n  const colors = ['#8884d8', '#00C49F'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col space-y-4 p-6 bg-white rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-gray-700\",\n      children: \"Improvement in Empathy Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: \"32% increase in empathy scores with VR-based communication training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: empathyScoreData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: [0, 140],\n            label: {\n              value: 'Relative Empathy Score (%)',\n              angle: -90,\n              position: 'insideLeft'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [`${value}%`, 'Empathy Score']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"value\",\n            fill: \"#8884d8\",\n            children: empathyScoreData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: colors[index]\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sr-only\",\n      children: \"This chart compares empathy scores between traditional role-playing methods and VR-based training. Traditional role-playing is shown as the baseline at 100%. VR-based training shows an empathy score of 132%, representing a 32% increase over traditional methods. The traditional method bar is shown in purple, while the VR-based training bar is shown in green to highlight the improvement.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = EmpathyScoresChart;\nexport default EmpathyScoresChart;\nvar _c;\n$RefreshReg$(_c, \"EmpathyScoresChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Cell","jsxDEV","_jsxDEV","EmpathyScoresChart","empathyScoreData","name","value","colors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","label","angle","position","formatter","fill","map","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/sarah/vr-medical-visualizations/src/components/EmpathyScoresChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\r\n\r\nconst EmpathyScoresChart = () => {\r\n  // Data for empathy scores comparison\r\n  const empathyScoreData = [\r\n    { name: 'Traditional Role-Playing', value: 100 },\r\n    { name: 'VR-Based Training', value: 132 },\r\n  ];\r\n  \r\n  // Colors for chart\r\n  const colors = ['#8884d8', '#00C49F'];\r\n  \r\n  return (\r\n    <div className=\"flex flex-col space-y-4 p-6 bg-white rounded-lg shadow\">\r\n      <h3 className=\"text-xl font-semibold text-gray-700\">Improvement in Empathy Scores</h3>\r\n      <p className=\"text-gray-600\">32% increase in empathy scores with VR-based communication training</p>\r\n      <div className=\"h-64\" aria-hidden=\"true\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart\r\n            data={empathyScoreData}\r\n            margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain={[0, 140]} label={{ value: 'Relative Empathy Score (%)', angle: -90, position: 'insideLeft' }} />\r\n            <Tooltip formatter={(value) => [`${value}%`, 'Empathy Score']} />\r\n            <Bar dataKey=\"value\" fill=\"#8884d8\">\r\n              {empathyScoreData.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={colors[index]} />\r\n              ))}\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <div className=\"sr-only\">\r\n        This chart compares empathy scores between traditional role-playing methods and VR-based training.\r\n        Traditional role-playing is shown as the baseline at 100%.\r\n        VR-based training shows an empathy score of 132%, representing a 32% increase over traditional methods.\r\n        The traditional method bar is shown in purple, while the VR-based training bar is shown in green to highlight the improvement.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmpathyScoresChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}